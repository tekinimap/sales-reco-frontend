!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("jszip")):"function"==typeof define&&define.amd?define(["exports","jszip"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).readXlsxFile={},e.JSZip)}(this,(function(e,t){"use strict";function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=n(t);const o={readXlsxFile:function(e,t){return i(e,t)},parseExcelDate:function(e,t){const n=Math.floor(e);let r=new Date(Math.round(864e5*(e+(t?1:0)-25569)));return r.setFullYear(r.getUTCFullYear()),r},readSheetNames:async function(e){const t=await r.default.loadAsync(await a(e));return Object.keys(t.files).filter((e=>e.match(/^xl\/worksheets\/sheet\d+\.xml$/))).map((e=>e.match(/\d+/)[0]))}};async function a(e){if(e instanceof ArrayBuffer)return e;if(e instanceof Blob)return await e.arrayBuffer();throw new Error("Unsupported input type")}async function i(e,t){const n=await r.default.loadAsync(await a(e)),o=t&&t.sheet?t.sheet:1,a=n.file("xl/sharedStrings.xml"),i=a?await a.async("string"):null,l=i?i.match(/<t[^>]*>(.*?)<\/t>/g).map((e=>e.replace(/<\/?t[^>]*>/g,""))):[],s=n.file(`xl/worksheets/sheet${o}.xml`);if(!s)throw new Error("Sheet not found");const d=await s.async("string"),c=(d.match(/<row[^>]*>[\s\S]*?<\/row>/g)||[]).map((e=>{const t=e.match(/<c[^>]*>[\s\S]*?<\/c>/g)||[];return t.map((e=>{const t=e.match(/t="(\w)"/),n=e.match(/<v>(.*?)<\/v>/);if(!n)return null;let r=n[1];return"inlineStr"===t?r:e.includes('t="s"')?l[+r]:r}))}));return c}e.default=o,e.readXlsxFile=o.readXlsxFile,e.parseExcelDate=o.parseExcelDate,e.readSheetNames=o.readSheetNames,Object.defineProperty(e,"__esModule",{value:!0})}));
